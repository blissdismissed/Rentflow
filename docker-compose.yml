version: '3.8'

services:
  web:
    build: .
    ports:
      - "80:80"
    environment:
      - NODE_ENV=production
    volumes:
      - ./logs:/var/log/nginx
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Optional: Add a backend service for API integration
  # backend:
  #   image: node:18-alpine
  #   working_dir: /app
  #   volumes:
  #     - ./backend:/app
  #   ports:
  #     - "3000:3000"
  #   command: npm start
  #   environment:
  #     - NODE_ENV=production
  #   depends_on:
  #     - database
  #   restart: unless-stopped

  # Optional: Add a database service
  # database:
  #   image: postgres:15-alpine
  #   environment:
  #     POSTGRES_DB: rentflow
  #     POSTGRES_USER: rentflow_user
  #     POSTGRES_PASSWORD: rentflow_password
  #   volumes:
  #     - postgres_data:/var/lib/postgresql/data
  #   ports:
  #     - "5432:5432"
  #   restart: unless-stopped

  # Optional: Add Redis for caching
  # redis:
  #   image: redis:7-alpine
  #   ports:
  #     - "6379:6379"
  #   volumes:
  #     - redis_data:/data
  #   restart: unless-stopped

networks:
  default:
    name: rentflow-network

volumes:
  # postgres_data:
  # redis_data: